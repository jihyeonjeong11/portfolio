{"version":3,"sources":["imgs/myflyingcatapp.jpg","imgs/flyingcat.jpg","cards/CardContent.js","cards/Cards.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CardContent","props","useState","render","item","index","className","src","thumbnail","alt","goodsNm","link","href","target","text","goodArr1","require","Cards","goodArr","matchesQuery","patchesQuery","map","style","marginBottom","Header","copy","setCopy","mobileMenu","setMobileMenu","highlight","setHighlight","listSwitch","width","color","display","justifyContent","onClick","height","CSSTransition","in","timeout","classNames","unmountOnExit","appear","onEntered","onExit","id","class","navigator","clipboard","writeText","cursor","outline","onMouseEnter","border","title","xmlns","viewBox","fill","d","App","window","matchMedia","matches","change","onresize","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e47acdc3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/myflyingcatapp.78badf9a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/flyingcat.7bf834e5.jpg\";","import React, {useState, useEffect} from 'react';\r\nimport './card-style.css';\r\nconst CardContent = props => {\r\n    const [render, show] = useState(true);\r\n    \r\n    const item = props.item;\r\n    const index = props.index;\r\n    // useEffect(()=>{\r\n    //     setTimeout(() => {\r\n    //         show({hidden: true});\r\n    //     }, index*1000);\r\n    // }, [index])\r\n    if(!render){\r\n        return null;\r\n    }\r\n    return (\r\n        <div className='card text-center'>\r\n            <div className='overflow'>\r\n                <img src={item.thumbnail} alt={`image${index}`} className='card-img-top' />\r\n            </div>\r\n            <div className='card-body text-dark'>\r\n                <h4 className='card-title'>{item.goodsNm}</h4>\r\n                {item.link !=='not' ?\r\n                <a href={item.link} target='blank'  className='btn btn-outline-success'>{item.text}</a>\r\n                :\r\n                <span>currently unavailable</span>\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CardContent;","import React from 'react';\r\nimport CardContent from './CardContent';\r\nimport '../App.css';\r\n\r\nconst goodArr1 = [\r\n    {\r\n      goodsNm: 'Flyingcat android',\r\n      thumbnail: require('../imgs/myflyingcatapp.jpg'),\r\n      link: 'https://play.google.com/store/apps/details?id=com.crunch.priceaos&hl=ko',\r\n      text: 'go to store'\r\n    },\r\n    {\r\n      goodsNm: 'Flyingcat ios',\r\n      thumbnail: require('../imgs/myflyingcatapp.jpg'),\r\n      link: 'not',\r\n    },\r\n    {\r\n      goodsNm: 'Flyingcat web',\r\n      thumbnail: require('../imgs/flyingcat.jpg'),\r\n      link: 'https://myflyingcat.com',\r\n      text: 'go to url'\r\n    },\r\n\r\n  ]\r\n\r\nfunction Cards(props) {\r\n    const goodArr = props?.goodArr || goodArr1;\r\n    const matchesQuery = props.patchesQuery;\r\n    return (\r\n        <div >\r\n           <h3 className='cardTitle mb-3'>My works</h3>\r\n           <div className=\"container-fluid d-flex justify-content-center\">\r\n             <div className=\"row justify-content-space-between pt-0\">\r\n            \r\n            {goodArr.map((item,index) => {\r\n                return (\r\n                   \r\n                    <div className=\"col-md-4 justify-content-center align-items-center d-flex\" style={{marginBottom: !matchesQuery ? 20 : 0}}>\r\n\r\n                          <CardContent item={item} index={index}/>\r\n                    </div>\r\n                \r\n                )\r\n            })}\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import React, { useState, useTran } from 'react';\r\nimport RenderSVG from './helpers/RenderSVG';\r\nimport './App.css';\r\nimport cx from 'classnames';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\n\r\nfunction Header(props) {\r\n    const matchesQuery = props.matchesQuery;\r\n    const [copy, setCopy] = useState(false);\r\n    const [mobileMenu, setMobileMenu] = useState(false);\r\n    const [highlight, setHighlight] = useState(false);\r\n    const listSwitch = () => {\r\n        setHighlight(!highlight);\r\n      };\r\n    const toggleMenu = () => {\r\n        setMobileMenu(!mobileMenu);\r\n    }\r\n    return (\r\n        <header className={'headerArea container-fluid mb-5'}  >\r\n            {matchesQuery === 'mobile' ?\r\n            <div style={{width: '100%'}}>\r\n                <div className={'headerContent'}>\r\n                    <div className='d-flex align-items-center'>\r\n                        <span style={{ color: 'white' }}>JIHYEON JEONG</span>\r\n                    </div>\r\n\r\n\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between', }}>\r\n\r\n                        <div onClick={toggleMenu} className='d-flex  w-25 align-items-center' >\r\n                            <img src='https://icon-library.com/images/menu-icon-white-png/menu-icon-white-png-27.jpg' width='40' height='40' />\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <CSSTransition\r\n          in={mobileMenu}\r\n          timeout={400}\r\n          classNames=\"list-transition\"\r\n          unmountOnExit\r\n          appear\r\n          onEntered={listSwitch}\r\n          onExit={listSwitch}\r\n        >\r\n             <nav style={{display: mobileMenu ? 'block' :'none'}} className='list-body'>\r\n\r\n<ul id=\"nav\" className='headerNav list'>\r\n    <li class=\"headerItem\"><a href=\"http://au.linkedin.com/in/jihyeon-jeong\"><span style={{color: 'white'}}>go to linkedin</span></a></li>\r\n    <li class=\"headerItem\"><span  onClick={() => {\r\n                                    navigator.clipboard.writeText('jihyeonjeong1117@gmail.com');\r\n                                    setCopy(true);\r\n\r\n                                }} style={{color: 'white', cursor: 'pointer'}}>{copy ? \"copied!\" : \"copy my email address\"}</span></li>\r\n\r\n</ul>\r\n\r\n</nav>\r\n          {/* <div className=\"list-body\">\r\n            <ul className=\"list\">\r\n              <li\r\n                className={cx(\"list-item\", {\r\n                  \"list-item--active\": highlight\r\n                })}\r\n              >\r\n                Writing JavaScript\r\n              </li>\r\n              <li className=\"list-item\"> Running</li>\r\n              <li className=\"list-item\"> Technical Writing</li>\r\n              <li className=\"list-item\"> Writing Clean code</li>\r\n            </ul>\r\n          </div> */}\r\n        </CSSTransition>\r\n                {/* <CSSTransition\r\n        in={mobileMenu}\r\n        timeout={300}\r\n        classNames=\"list-transition\"\r\n        unmountOnExit\r\n\r\n      >\r\n          \r\n          </ CSSTransition> */}\r\n               \r\n                </div>\r\n                :\r\n                <div className={'headerContent'}>\r\n                    <div className='d-flex align-items-center'>\r\n                        <span style={{ color: 'white' }}>JIHYEON JEONG</span>\r\n                    </div>\r\n                    <div className='d-flex w-25 justify-content-space-evenly' style={{ justifyContent: 'space-evenly' }}>\r\n                        <div>\r\n                            <button\r\n                                style={{ outline: 'none' }}\r\n                                onMouseEnter={() => setCopy(false)}\r\n                                className='mytooltip'\r\n                                onClick={() => {\r\n                                    navigator.clipboard.writeText('jihyeonjeong1117@gmail.com');\r\n                                    setCopy(true);\r\n\r\n                                }}>\r\n                                <img src='https://www.pinpng.com/pngs/m/326-3269157_at-email-sign-png-picture-email-icon-white.png' width='25' height='21' style={{ border: '0px' }} />\r\n                                <span class=\"mytooltiptext\">{copy ? \"copied!\" : \"Unfortunately, couldn't find email svg with transparent background so far... but you can still copy my email address when click!\"}</span>\r\n                            </button>\r\n\r\n                        </div>\r\n                        <div>\r\n                            <a href=\"http://au.linkedin.com/in/jihyeon-jeong\" title=\"Connect with me on Linkedin\" target=\"_blank\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width={21} height={21} viewBox=\"0 0 448 512\"><path fill=\"#ffffff\" d=\"M100.3 480H7.4V180.9h92.9V480zM53.8 140.1C24.1 140.1 0 115.5 0 85.8 0 56.1 24.1 32 53.8 32c29.7 0 53.8 24.1 53.8 53.8 0 29.7-24.1 54.3-53.8 54.3zM448 480h-92.7V334.4c0-34.7-.7-79.2-48.3-79.2-48.3 0-55.7 37.7-55.7 76.7V480h-92.8V180.9h89.1v40.8h1.3c12.4-23.5 42.7-48.3 87.9-48.3 94 0 111.3 61.9 111.3 142.3V480z\" /></svg>\r\n\r\n                            </a>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n\r\n        </header>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Header;\r\n\r\n//    <nav style={{display: mobileMenu ? 'block' :'none'}}>\r\n\r\n// \t\t\t\t\t<ul id=\"nav\">\r\n// \t\t\t\t\t\t<li class=\"page_item page-item-2\"><a href=\"http://www.adhamdannaway.com/about\">about</a></li>\r\n// <li class=\"page_item page-item-5\"><a href=\"http://www.adhamdannaway.com/featured\">featured</a></li>\r\n// <li class=\"page_item page-item-7\"><a href=\"http://www.adhamdannaway.com/portfolio\">portfolio</a></li>\r\n// <li class=\"page_item page-item-9\"><a href=\"http://www.adhamdannaway.com/blog\">blog</a></li>\r\n\r\n\r\n// \t\t\t\t\t\t<li>\r\n// \t\t\t\t\t\t\t<ul class=\"social\">\r\n// \t\t\t\t\t\t\t\t<li class=\"email\"><span id=\"email-tooltip\" tooltip=\"Click to copy my email address to your clipboard 😀\"><a id=\"email\" data-clipboard-text=\"adhamdannaway@gmail.com\">email</a></span></li>\r\n// \t\t\t\t\t\t\t\t<li class=\"twitter\"><a href=\"http://www.twitter.com/AdhamDannaway\" title=\"Follow me on Twitter\" target=\"_blank\">twitter</a></li>\r\n// \t\t\t\t\t\t\t\t<li class=\"linkedin\"><a href=\"http://au.linkedin.com/in/adhamdannaway\" title=\"Connect with me on Linkedin\" target=\"_blank\">linkedin</a></li>\r\n// \t\t\t\t\t\t\t\t<li class=\"facebook\"><a href=\"http://www.facebook.com/ilikeadham\" title=\"Like me on Facebook\" target=\"_blank\">facebook</a></li>\r\n// \t\t\t\t\t\t\t\t<li class=\"dribbble\"><a href=\"http://www.dribbble.com/adhamdannaway\" title=\"See my Dribbble shots\" target=\"_blank\">dribbble</a></li>\r\n// \t\t\t\t\t\t\t</ul>\r\n// \t\t\t\t\t\t</li>\r\n\r\n// \t\t\t\t\t</ul>\r\n\r\n// \t\t\t\t</nav>","import React, { Fragment ,useEffect, useState} from 'react';\nimport './App.css';\nimport Cards from './cards/Cards';\nimport Header from './Header';\n\nfunction App() {\n  const [matchesQuery, change]= useState(window.matchMedia(\"(max-width: 400px)\").matches ? 'mobile' : 'pc');\n  const changeQuery = () => {\n    const matches = window.matchMedia(\"(max-width: 400px)\").matches  ? 'mobile' : 'pc';\n    if(matches === matchesQuery){\n      return;\n    } else {\n      change(matches)\n    }\n  }\n  window.onresize = changeQuery;\n  \n  return (\n    <Fragment >\n      <Header matchesQuery={matchesQuery} />\n      <Cards matchesQuery={matchesQuery} />\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}